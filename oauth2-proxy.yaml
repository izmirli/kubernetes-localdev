# Source: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/docs/examples/auth/oauth-external-auth/oauth2-proxy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: oauth2-proxy
  template:
    metadata:
      labels:
        k8s-app: oauth2-proxy
    spec:
      containers:
        - args:
            - --email-domain=* #
            - --http-address=0.0.0.0:4180 # accept from anywhere to port 4180
            - --whitelist-domain=.kubemaster.me # any subdomain
            - --ssl-insecure-skip-verify # must have with http
            - --request-logging=true # logging
            - --show-debug-on-error=true # logging
            - --provider=google
            - --cookie-secure=false # must have with http
            - --cookie-domain=.kubemaster.me # authed to any subdomain
            - --cookie-httponly=true # default
            # - --upstream= IRRELEVANT - used only when there's 1 backend server http://localhost:4180
            # - --redirect-url= IRRELEVANT - fetched from /oauth2/start?rd=$escaped_request_uri
            # - --cookie-refresh=0 # irrelevant
            # - --cookie-name=_oauth2_proxy # irrelevant
          env:
            - name: OAUTH2_PROXY_CLIENT_ID
              value: ""
            - name: OAUTH2_PROXY_CLIENT_SECRET
              value: ""
            - name: OAUTH2_PROXY_COOKIE_SECRET
              value: ""
          image: quay.io/oauth2-proxy/oauth2-proxy:v7.1.0
          imagePullPolicy: IfNotPresent
          name: oauth2-proxy
          ports:
            - containerPort: 4180
              protocol: TCP
          resources:
            limits:
              memory: 400Mi
              cpu: "200m"
            requests:
              memory: 200Mi
              cpu: 100m
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: default
spec:
  #  type: LoadBalancer
  ports:
    - name: http
      port: 4180
      protocol: TCP
      targetPort: 4180
  selector:
    k8s-app: oauth2-proxy
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: oauth2-proxy
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: app.kubemaster.me
      http:
        paths:
          - backend:
              serviceName: oauth2-proxy
              servicePort: 4180
            path: /oauth2
